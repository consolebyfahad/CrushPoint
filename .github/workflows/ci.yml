name: CI - Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📋 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: 📦 Install Dependencies
        run: yarn install --frozen-lockfile

      - name: 🧹 Run Linting
        run: yarn lint

      - name: 🧪 Run Tests
        run: yarn test --watchAll=false

      - name: 📊 Run Tests with Coverage
        run: yarn test:coverage --watchAll=false

      - name: 🔍 Type Check
        run: yarn type-check

      - name: ✅ Build Check
        run: yarn preview

      - name: 📤 Upload Coverage to GitHub
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  security:
    name: Security Check
    runs-on: ubuntu-latest

    steps:
      - name: 📋 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: 📦 Install Dependencies
        run: yarn install --frozen-lockfile

      - name: 🔐 Security Audit
        run: yarn audit --level moderate
        continue-on-error: true

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, security]
    if: always()

    steps:
      - name: ✅ Success Notification
        if: needs.test.result == 'success' && needs.security.result == 'success'
        run: |
          echo "🎉 All checks passed! Code is ready."
          echo "✅ Tests: PASSED"
          echo "✅ Security: PASSED"

      - name: ❌ Failure Notification
        if: needs.test.result == 'failure' || needs.security.result == 'failure'
        run: |
          echo "❌ Some checks failed!"
          echo "Tests: ${{ needs.test.result }}"
          echo "Security: ${{ needs.security.result }}"
          exit 1
